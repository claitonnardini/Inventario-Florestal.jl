#Invent√°rio Florestalüå≥
#Amostragem aleat√≥ria simples
_________________________________________________________________________________________________________________________________________

using DataFrames, Statistics, Distributions, CSV, XLSX #Habilitar pacotes
_________________________________________________________________________________________________________________________________________

#Fun√ß√£o ASS: amostragem aleat√≥ria simples
function AAS(Unidades, Volume) #Determina a fun√ß√£o
    Volume = (Conversor.*Dados.Volume)
    Unidades = Dados.Unidades
    ASS= DataFrame(Unidades = Unidades, Volume= Volume)
    mean(Volume) #M√©dia
    (length(Unidades)) #N√∫mero de unidades
    var(Volume) #Vari√¢ncia 
    sqrt(var(Volume)) #Desvio padr√£o
    (1-(length(Unidades)/N)) #Fra√ß√£o da amostragem
    (0.1*mean(Volume)) #Limite de erro da amostragem requerido
    t=quantile(TDist(length(Unidades)-1),1-alpha/2) #Valor de t
    if (1-(length(Unidades)/N)) ‚â• 0.98 #f maior ou igual a 0,98 popula√ß√£o infinita
    Popula√ß√£o = "√© considerada infinita"   
        println(Popula√ß√£o)
    elseif (1-(length(Unidades)/N)) < 0.98 #f menor que 0,98 popula√ß√£o finita
    Popula√ß√£o = "√© considerada finita"    
        println(Popula√ß√£o)
        end     
    Intensidade =   if (1-(length(Unidades)/N)) ‚â• 0.98 #f maior ou igual a 0,98 popula√ß√£o infinita
        #Popula√ß√£o infinita. A intensidade de amostragem √© calculada pela seguinte equa√ß√£o:
        int_infinita=(((t)^2)*var(Volume))/(((0.1*mean(Volume)))^2) 
        round(int_infinita)
    elseif (1-(length(Unidades)/N)) < 0.98 #f menor que 0,98 popula√ß√£o finita
        #Popula√ß√£o finita. A intensidade de amostragem √© calculada pela seguinte equa√ß√£o:
        int_finita=(N*((t)^2)*var(Volume))/((N*(((0.1*mean(Volume)))^2))+(((t)^2)*var(Volume)))
        round(int_finita)
    end 
    (var(Volume)/length(Unidades))*(1-(length(Unidades)/N)) #Vari√¢ncia m√©dia
    (sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N))) #Erro padr√£o
    ((sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N)))/mean(Volume))*100 #Erro padr√£o relativo
    ((sqrt(var(Volume))/mean(Volume))*100) #Coeficiente de varia√ß√£o
    (((((sqrt(var(Volume))/mean(Volume))*100))^2)/(length(Unidades)))*(1-(length(Unidades)/N)) #Vari√¢ncia m√©dia relativa
    #Erro de amostragem
    (t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N)))) #Absoluto
    ((t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N))))/mean(Volume))*100 #Relativo
    #Limite do intervalo de confian√ßa para m√©dia 
    (mean(Volume)-(t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N))))) #Inferior
    (mean(Volume)+(t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N))))) #Superior
    ((N*mean(Volume))/Conversor) #Total da popula√ß√£o
    #Limite do intervalo de confian√ßa para o total   
    ((N*mean(Volume))-N*(t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N)))))/Conversor #Inferior
    ((N*mean(Volume))+N*(t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N))))) #Inferior
    mean(Volume)-(t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N)))) #Estimativa m√≠nima de confian√ßa
    #Tabela com os resultados
    if ((t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N))))/mean(Volume))*100 > EAR
        Observa√ß√£o = "Diante do exposto, conclui-se que os resultados obtidos na amostragem n√£o satisfazem as exig√™ncias de
        precis√£o estabelecidas para o invent√°rio, ou seja, um erro de amostragem m√°ximo de ¬±10% da m√©dia  para confiabilidade designada. 
        O erro estimado foi maior que o limite fixado, sendo recomendado incluir mais unidades amostrais no invent√°rio."
        println(Observa√ß√£o)
        elseif ((t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N))))/mean(Volume))*100 ‚â§ EAR
        Observa√ß√£o  = "Diante do exposto, conclui-se que os resultados obtidos na amostragem satisfazem as exig√™ncias de
        precis√£o estabelecidas para o invent√°rio, ou seja, um erro de amostragem m√°ximo de ¬±10% da m√©dia para confiabilidade designada. 
        O erro estimado foi menor que o limite fixado, assim as unidades amostrais s√£o suficientes para o invent√°rio."
        println(Observa√ß√£o)
    end       
    Resultados = DataFrames.DataFrame(Vari√°veis=["M√©dia (m¬≥/ha)", "Limite inferior do intervalo de confian√ßa para m√©dia (m¬≥/ha)", 
    "Limite superior do intervalo de confian√ßa para m√©dia (m¬≥/ha)", "Total da popula√ß√£o (m¬≥)", "Limite inferior do intervalo de confian√ßa para o total (m¬≥)", 
    "Limite superior do intervalo de confian√ßa para o total (m¬≥)", "Erro padr√£o relativo (%)", "√Årea da popula√ß√£o (ha)", "Erro da amostragem absoluto (m¬≥/ha)", "Erro padr√£o (m¬≥/ha)", "Desvio padr√£o (m¬≥/ha)", 
    "Vari√¢ncia (m¬≥/ha)¬≤", "Vari√¢ncia da m√©dia (m¬≥/ha)¬≤", "Vari√¢ncia da m√©dia relativa (%)", "Coeficiente de varia√ß√£o (%)", "Limite de erro da amostragem requerido", "Estimativa m√≠nima de confian√ßa (m¬≥/ha)",
    "Fra√ß√£o de amostragem", "Intensidade de amostragem", "Popula√ß√£o", "N√∫mero total de unidades amostrais da popula√ß√£o", "N√≠vel de signific√¢ncia (Œ±)",  
    "Observa√ß√£o"], Valores=[mean(Volume), (mean(Volume)-(t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N))))), 
    (mean(Volume)+(t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N))))), 
    ((N*mean(Volume))/Conversor), 
    ((N*mean(Volume))-N*(t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N)))))/Conversor, 
    ((N*mean(Volume))+N*(t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N))))),
    ((t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N))))/mean(Volume))*100, √Årea,
    (t*(sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N)))),
    (sqrt(var(Volume))/sqrt(length(Unidades)))*sqrt((1-(length(Unidades)/N))), sqrt(var(Volume)),   
    var(Volume), (var(Volume)/length(Unidades))*(1-(length(Unidades)/N)), 
    (((((sqrt(var(Volume))/mean(Volume))*100))^2)/(length(Unidades)))*(1-(length(Unidades)/N)), 
    ((sqrt(var(Volume))/mean(Volume))*100), (0.1*mean(Volume)), EAR, (1-(length(Unidades)/N)),
    Intensidade, Popula√ß√£o, N, alpha, Observa√ß√£o]) #Tabela de resultados
    XLSX.writetable(("F:/Version_09_07_21/iflorestal.jl/1.xlsx"), Dados=(collect(DataFrames.eachcol(ASS)), 
        DataFrames.names(ASS)), Resultados=(collect(DataFrames.eachcol(Resultados)), 
        DataFrames.names(Resultados))) #Exportar para o Excel
end 
_________________________________________________________________________________________________________________________________________

#Processamento do invent√°rio
#Importar dados
Dados = CSV.read("F:/Version_09_07_21/amostragem_simples.csv", DataFrame) 
#Informa√ß√µes necess√°rias
#√Årea da popula√ß√£o
const √Årea = 45
#N√∫mero total de unidades de amostragem na popula√ß√£o
const N = √Årea/0.1 
#N√≠vel de signific√¢ncia (Œ±)
const alpha = 0.05
const EAR = 10 #Erro da amostragem requerido
#Unidade de medida da vari√°vel
Unidade = "m¬≥/0.1 ha" #Alterar em fun√ß√£o do invent√°rio
#Conversor para a unidade de √°rea por hectare
√Årea_da_parcela=0.1
Conversor=1/√Årea_da_parcela
#AAS(Unidades, Volume)
AAS(Dados.Unidades, Dados.Volume) #Sa√≠da dos dados