#Invent√°rio Florestalüå≥
#Amostragem sistem√°tica
_________________________________________________________________________________________________________________________________________

using DataFrames, Statistics, Distributions, CSV, XLSX #Habilitar pacotes
_________________________________________________________________________________________________________________________________________
#Fun√ß√£o Sistematica: amostragem sistem√°tica

function Sistematica(Dados) #Determinar fun√ß√£o
    Conjunto_de_dados = (Conversor.*Dados)
    #Tabela com estat√≠tica descritiva por unidade secund√°ria/bloco
    Tabela=transform(Conjunto_de_dados, AsTable(:) .=> ByRow.([I -> count(!ismissing, I), sum, mean, var]).=>[:n, :Soma, :M√©dia, :Vari√¢ncia])
    m=length(Tabela.n) #N√∫mero de faixas
    nj=first(unique((Tabela.n))) #N√∫mero de unidades
    n=(length(Tabela.n)*first(unique((Tabela.n)))) #N√∫mero de unidades amostrais totais
    (quantile(TDist(n-1), 1-alpha/2)) #Valor de t
    (1-((length(Tabela.n)*first(unique((Tabela.n))))/N)) #Fator de corre√ß√£o
    if (1-((length(Tabela.n)*first(unique((Tabela.n))))/N)) ‚â• 0.98 #f maior ou igual a 0,98 popula√ß√£o infinita
        Popula√ß√£o = "√© considerada infinita"   
            println(Popula√ß√£o)
        elseif (1-((length(Tabela.n)*first(unique((Tabela.n))))/N)) < 0.98 #f menor que 0,98 popula√ß√£o finita
        Popula√ß√£o = "√© considerada finita"    
            println(Popula√ß√£o)
            end
    mean(Tabela.M√©dia)
    g=Matrix(Dados)
    matriz=transpose(g)
    global a = 0
    global Sx¬≤ = 0
    for i in 1:length(matriz)-1
        if i % first(unique((Tabela.n))) == 0
            continue
            end
        global a += (sum(matriz[i]-matriz[i+1])^2)
        Sx¬≤ = (a/(2*(length(Tabela.n)*first(unique((Tabela.n))))*((length(Tabela.n)*first(unique((Tabela.n))))-length(Tabela.n))))*
            (1-((length(Tabela.n)*first(unique((Tabela.n))))/N)) #Estimativa aproximada da vari√¢ncia da m√©dia
        end
    sqrt(Sx¬≤) #Estimativa aproximada do erro padr√£o
    #Erro da amostragem
    ((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 1-alpha/2))*sqrt(Sx¬≤)) #Absoluto
    (((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 
    1-alpha/2))*sqrt(Sx¬≤))/mean(Tabela.M√©dia))*1000 #Relativo
    #Limite do intervalo de confian√ßa para m√©dia
    mean(Tabela.M√©dia)-((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 
    1-alpha/2))*sqrt(Sx¬≤)) #Inferior
    mean(Tabela.M√©dia)+((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 
    1-alpha/2))*sqrt(Sx¬≤)) #Superior  
    #Total da popula√ß√£o
    ((N*mean(Tabela.M√©dia))/Conversor)
    #Limite do intervalo de confian√ßa para o total
    (((N*mean(Tabela.M√©dia))-N*((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 
    1-alpha/2))*sqrt(Sx¬≤)))/Conversor) #Inferior 
    (((N*mean(Tabela.M√©dia))+N*((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 
    1-alpha/2))*sqrt(Sx¬≤)))/Conversor) #Superior
    if (((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 1-alpha/2))*sqrt(Sx¬≤))/mean(Tabela.M√©dia))*100 > EAR
        Observa√ß√£o = "Diante do exposto, conclui-se que os resultados obtidos na amostragem n√£o satisfazem as exig√™ncias de
        precis√£o estabelecidas para o invent√°rio, ou seja, um erro de amostragem m√°ximo de ¬±10% da m√©dia  para confiabilidade designada. 
        O erro estimado foi maior que o limite fixado, sendo recomendado incluir mais unidades amostrais no invent√°rio."
        println(Observa√ß√£o)
        elseif (((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 1-alpha/2))*sqrt(Sx¬≤))/mean(Tabela.M√©dia))*100 ‚â§ EAR
            Observa√ß√£o  = "Diante do exposto, conclui-se que os resultados obtidos na amostragem satisfazem as exig√™ncias de
                precis√£o estabelecidas para o invent√°rio, ou seja, um erro de amostragem m√°ximo de ¬±10% da m√©dia para confiabilidade designada. 
                O erro estimado foi menor que o limite fixado, assim as unidades amostrais s√£o suficientes para o invent√°rio."
                println(Observa√ß√£o)
        end
    Resultados = DataFrames.DataFrame(Vari√°veis=["M√©dia (m¬≥/ha)", "Limite inferior do intervalo de confian√ßa para m√©dia (m¬≥/ha)", 
    "Limite superior do intervalo de confian√ßa para m√©dia (m¬≥/ha)", "Total da popula√ß√£o (m¬≥)", "Limite inferior do intervalo de confian√ßa para o total (m¬≥)", 
    "Limite superior do intervalo de confian√ßa para o total (m¬≥)", "√Årea da popula√ß√£o (ha)", "Erro da amostragem relativo (%)", 
    "Erro padr√£o absoluto (m¬≥/ha)", "Erro padr√£o da m√©dia (m¬≥/ha)", "Vari√¢ncia da m√©dia (m¬≥/ha)¬≤", "Fator de corre√ß√£o", "Popula√ß√£o", 
    "Unidades amostrais poss√≠veis", "N√∫mero de unidades amostrais totais", "N√∫mero de unidades do invent√°rio florestal", 
    "N√∫mero de faixas do invent√°rio florestal",  "N√≠vel de signific√¢ncia (Œ±)", "Observa√ß√£o"], 
    Valores=[mean(Tabela.M√©dia), mean(Tabela.M√©dia)-((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 
    1-alpha/2))*sqrt(Sx¬≤)), mean(Tabela.M√©dia)+((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 
    1-alpha/2))*sqrt(Sx¬≤)), ((N*mean(Tabela.M√©dia))/Conversor), (((N*mean(Tabela.M√©dia))-N*((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 
    1-alpha/2))*sqrt(Sx¬≤)))/Conversor), (((N*mean(Tabela.M√©dia))+N*((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 
    1-alpha/2))*sqrt(Sx¬≤)))/Conversor), area, (((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 
    1-alpha/2))*sqrt(Sx¬≤))/mean(Tabela.M√©dia))*1000, ((quantile(TDist((length(Tabela.n)*first(unique((Tabela.n))))-1), 1-alpha/2))*sqrt(Sx¬≤)), 
    sqrt(Sx¬≤), Sx¬≤, (1-((length(Tabela.n)*first(unique((Tabela.n))))/N)), Popula√ß√£o, N, (length(Tabela.n)*first(unique((Tabela.n)))), 
    first(unique((Tabela.n))), length(Tabela.n), alpha, Observa√ß√£o]) #Tabela de resultados
    XLSX.writetable(("F:/Version_09_07_21/iflorestal.jl/03.xlsx"), Dados=( collect(DataFrames.eachcol(Conjunto_de_dados)), 
        DataFrames.names(Conjunto_de_dados)), Analise_descritiva=( collect(DataFrames.eachcol(Tabela)), DataFrames.names(Tabela)),  
    Resultados=( collect(DataFrames.eachcol(Resultados)), DataFrames.names(Resultados))) #Exportar para o Excel
end 
________________________________________________________________________________________________________________________________________

#Processamento do invent√°rio
#Importar dados
Dados = CSV.read("F:/Version_09_07_21/sist.csv", DataFrame) 
#Informa√ß√µes necess√°rias
#√Årea da popula√ß√£o
const area = 45
#N√∫mero potencial de unidades populacionais 
const N = area/0.1
#N√≠vel de signific√¢ncia (Œ±)
const alpha = 0.05 
const EAR = 10 #Erro da amostragem requerido
#Unidade de medida da vari√°vel
Unidade = "m¬≥/0.1 ha" #Alterar em fun√ß√£o do invent√°rio
#Conversor para a unidade de √°rea por hectare
√Årea_da_parcela=0.1
Conversor=1/√Årea_da_parcela
#function Sistematica(Dados)
Sistematica(Dados) #Sa√≠da dos dados
