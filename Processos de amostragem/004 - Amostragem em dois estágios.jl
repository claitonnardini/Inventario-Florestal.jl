#Invent√°rio Florestalüå≥
#Amostragem em dois est√°gios 
_________________________________________________________________________________________________________________________________________

using DataFrames, Statistics, Distributions, CSV, XLSX #Habilitar pacotes
_________________________________________________________________________________________________________________________________________

#Fun√ß√£o Dois_estagios: amostragem em dois est√°gios
function Dois_estagios(Dados) #Determina a fun√ß√£o
    Conjunto_de_dados = (Conversor.*Dados)
    #Tabela com estat√≠tica descritiva por unidade secund√°ria/bloco
    Tabela=transform(Conjunto_de_dados, AsTable(:) .=> ByRow.([I -> count(!ismissing, I), sum, mean, var]).=>[:n, :Soma, :M√©dia, :Vari√¢ncia])
    (length(Tabela.n)) #N√∫mero de unidades/blocos prim√°rias
    first(unique(Tabela.n)) #N√∫mero de unidades secund√°rias
    (sum(Tabela.M√©dia)/length(Tabela.n)) #M√©dia
    sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*(first(unique(Tabela.n))-1))
    sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*(first(unique(Tabela.n))-1))/Conversor #Vari√¢ncia dentro das unidades
    sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/(length(Tabela.n)-1)
    (sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/Conversor #Vari√¢ncia entre unidades
    ((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/Conversor)+
    (sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*(first(unique(Tabela.n))-1))/Conversor) #Estimativa da vari√¢ncia 
        1-(length(Tabela.n)/N) #Fator de corre√ß√£o
    (0.1*(sum(Tabela.M√©dia)/length(Tabela.n))) #Limite de erro da amostragem requerido
    quantile(TDist((length(Tabela.n))-1),1-alpha/2) #Valor de t 

    if 1-(length(Tabela.n)/N) ‚â• 0.98 #f maior ou igual a 0,98 popula√ß√£o infinita
        Popula√ß√£o = "√© considerada infinita"   
            println(Popula√ß√£o)
        elseif 1-(length(Tabela.n)/N) < 0.98 #f menor que 0,98 popula√ß√£o finita
        Popula√ß√£o = "√© considerada finita"    
            println(Popula√ß√£o)
            end
    
    Tamanho_da_amostra = if 1-(length(Tabela.n)/N) ‚â• 0.98
         #Popula√ß√£o infinita. O tamanho da amostra √© calculado pela seguinte equa√ß√£o:
         Infinita=((quantile(TDist(length(Tabela.n)-1),1-alpha/2))^2)*((sum(first(unique(Tabela.n))*
        (Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
        (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
        (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))+(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/
        (length(Tabela.n)*(first(unique(Tabela.n))-1))/first(unique(Tabela.n))))/
        (((0.1*(sum(Tabela.M√©dia)/length(Tabela.n))))^2)
        round(Infinita)
    elseif 1-(length(Tabela.n)/N) < 0.98
         #Popula√ß√£o finita. O tamanho da amaostra √© calculado pela seguinte equa√ß√£o:
         Finita=((quantile(TDist(length(Tabela.n)-1),1-alpha/2))^2)*((sum(first(unique(Tabela.n))*
        (Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
        (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
        (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))+(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/
        (length(Tabela.n)*(first(unique(Tabela.n))-1))./first(unique(Tabela.n))))/
        ((((0.1*(sum(Tabela.M√©dia)/length(Tabela.n))))^2)+(1/N)*((quantile(TDist(length(Tabela.n)-1),1-alpha/2))^2)*
        ((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
        ((length(Tabela.n))-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
        (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))+(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/
        (length(Tabela.n)*(first(unique(Tabela.n))-1))/M)))
        round(Finita)
    end
    (((N-length(Tabela.n))/N)*((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+((M-first(unique(Tabela.n)))/M)*
    (sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*(first(unique(Tabela.n))-1))/
    (length(Tabela.n)*first(unique(Tabela.n)))))/Conversor #Vari√¢ncia da m√©dia
    sqrt((((N-length(Tabela.n))/N)*((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/(length(Tabela.n)*first(unique(Tabela.n)))))) #Erro padr√£o
    #Erro da amostragem
    quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*((sum(first(unique(Tabela.n))*
    (Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/
    (length(Tabela.n)*(first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/(length(Tabela.n)*first(unique(Tabela.n)))))) #Absoluto
    (quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*((sum(first(unique(Tabela.n))*
    (Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/(length(Tabela.n)*first(unique(Tabela.n))))))/
    (sum(Tabela.M√©dia)/length(Tabela.n)))*100 #Relativo
    #Limite do intervalo de confian√ßa para m√©dia
    ((sum(Tabela.M√©dia)/length(Tabela.n))-quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*
    ((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/
    (length(Tabela.n)*first(unique(Tabela.n))))))) #Inferior
    ((sum(Tabela.M√©dia)/length(Tabela.n))+quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*
    ((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/
    (length(Tabela.n)*first(unique(Tabela.n))))))) #Superior
    #Total estimado
    ((N*M*sum(Tabela.M√©dia)/length(Tabela.n))/Conversor)
    #Limite do intervalo de confian√ßa para o total 
    (((N*M*sum(Tabela.M√©dia)/length(Tabela.n))-(N*M*quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*
    ((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/
    (length(Tabela.n)*first(unique(Tabela.n))))))))/Conversor) #Inferior 
    (((N*M*sum(Tabela.M√©dia)/length(Tabela.n))+(N*M*quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*
    ((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/
    (length(Tabela.n)*first(unique(Tabela.n))))))))/Conversor) #Superior
    if (quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*((sum(first(unique(Tabela.n))*
        (Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
        (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
        (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
        ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
        (first(unique(Tabela.n))-1))/(length(Tabela.n)*first(unique(Tabela.n))))))/
        (sum(Tabela.M√©dia)/length(Tabela.n)))*100 > EAR
        Observa√ß√£o = "Diante do exposto, conclui-se que os resultados obtidos na amostragem n√£o satisfazem as exig√™ncias de
        precis√£o estabelecidas para o invent√°rio, ou seja, um erro de amostragem m√°ximo de ¬±10% da m√©dia  para confiabilidade designada. 
        O erro estimado foi maior que o limite fixado, sendo recomendado incluir mais unidades amostrais no invent√°rio."
        println(Observa√ß√£o)
        elseif (quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*((sum(first(unique(Tabela.n))*
            (Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
            (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
            (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
            ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
            (first(unique(Tabela.n))-1))/(length(Tabela.n)*first(unique(Tabela.n))))))/
            (sum(Tabela.M√©dia)/length(Tabela.n)))*100 ‚â§ EAR
                Observa√ß√£o  = "Diante do exposto, conclui-se que os resultados obtidos na amostragem satisfazem as exig√™ncias de
                precis√£o estabelecidas para o invent√°rio, ou seja, um erro de amostragem m√°ximo de ¬±10% da m√©dia para confiabilidade designada. 
                O erro estimado foi menor que o limite fixado, assim as unidades amostrais s√£o suficientes para o invent√°rio."
                println(Observa√ß√£o)
    end       
    Resultados = DataFrames.DataFrame(Vari√¢nciai√°veis=["M√©dia (m¬≥/ha)", "Limite inferior do intervalo de confian√ßa para m√©dia (m¬≥/ha)", 
    "Limite superior do intervalo de confian√ßa para m√©dia (m¬≥/ha)", "Total da popula√ß√£o (m¬≥)", "Limite inferior do intervalo de confian√ßa para o total (m¬≥)", 
    "Limite superior do intervalo de confian√ßa para o total (m¬≥)", "√Årea da popula√ß√£o (ha)", "Erro da amostragem relativo (%)", 
    "Erro da amostragem absoluto (m¬≥/ha)", "Erro padr√£o (m¬≥/ha)", "Vari√¢ncia dentro das unidades (m¬≥/ha)¬≤", "Vari√¢ncia entre unidades (m¬≥/ha)¬≤", 
    "Estimativa da Vari√¢ncia (m¬≥/ha)¬≤", "Vari√¢ncia da m√©dia da popula√ß√£o (m¬≥/ha)¬≤", "Limite do erro de amostragem requerido", 
    "Fator de corre√ß√£o", "Popula√ß√£o", "Tamanho da amostra", "N√∫mero total de unidades secund√°rias por unidade prim√°ria", "N√∫mero potencial de unidades prim√°rias", 
    "N√∫mero de unidades prim√°rias", "N√∫mero de unidades secund√°rias", "N√≠vel de signific√¢ncia (Œ±)", "Observa√ß√£o"], Valores=[(sum(Tabela.M√©dia)/length(Tabela.n)), 
    ((sum(Tabela.M√©dia)/length(Tabela.n))-quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*
    ((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/
    (length(Tabela.n)*first(unique(Tabela.n))))))), ((sum(Tabela.M√©dia)/length(Tabela.n))+quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*
    ((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/
    (length(Tabela.n)*first(unique(Tabela.n))))))), ((N*M*sum(Tabela.M√©dia)/length(Tabela.n))/Conversor), 
    (((N*M*sum(Tabela.M√©dia)/length(Tabela.n))-(N*M*quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*
    ((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/
    (length(Tabela.n)*first(unique(Tabela.n))))))))/Conversor), 
    (((N*M*sum(Tabela.M√©dia)/length(Tabela.n))+(N*M*quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*
    ((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/
    (length(Tabela.n)*first(unique(Tabela.n))))))))/Conversor), area, (quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*((sum(first(unique(Tabela.n))*
    (Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/(length(Tabela.n)*first(unique(Tabela.n))))))/
    (sum(Tabela.M√©dia)/length(Tabela.n)))*100, quantile(TDist(length(Tabela.n)-1),1-alpha/2)*sqrt((((N-length(Tabela.n))/N)*((sum(first(unique(Tabela.n))*
    (Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/
    (length(Tabela.n)*(first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/(length(Tabela.n)*first(unique(Tabela.n)))))), sqrt((((N-length(Tabela.n))/N)*((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+
    ((M-first(unique(Tabela.n)))/M)*(sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1))/(length(Tabela.n)*first(unique(Tabela.n)))))), 
    sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*(first(unique(Tabela.n))-1))/Conversor, 
    (sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/Conversor, (((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/Conversor)+
    (sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*(first(unique(Tabela.n))-1))/Conversor)), 
    (((N-length(Tabela.n))/N)*((sum(first(unique(Tabela.n))*(Tabela.M√©dia.-(sum(Tabela.M√©dia)/length(Tabela.n))).^2)/
    (length(Tabela.n)-1)-sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*
    (first(unique(Tabela.n))-1)))/first(unique(Tabela.n))/length(Tabela.n))+((M-first(unique(Tabela.n)))/M)*
    (sum(Tabela.Vari√¢ncia*(first(unique(Tabela.n))-1))/(length(Tabela.n)*(first(unique(Tabela.n))-1))/
    (length(Tabela.n)*first(unique(Tabela.n)))))/Conversor, (0.1*(sum(Tabela.M√©dia)/length(Tabela.n))), 1-(length(Tabela.n)/N), Popula√ß√£o, Tamanho_da_amostra,  
    M, N, length(Tabela.n), first(unique(Tabela.n)), alpha, Observa√ß√£o]) #Tabela de resultados  
    XLSX.writetable(("F:/Version_09_07_21/iflorestal.jl/04.xlsx"), Dados=(collect(DataFrames.eachcol(Dados)), 
    DataFrames.names(Dados)), Analise_descritiva=(collect(DataFrames.eachcol(Tabela)), DataFrames.names(Tabela)), 
    Resultados=(collect(DataFrames.eachcol(Resultados)), DataFrames.names(Resultados))) #Exportar para o Excel     
end
_________________________________________________________________________________________________________________________________________

#Processamento do invent√°rio
#Importar dados
Dados = CSV.read("F:/Version_09_07_21/dois_estagios.csv", DataFrame) 
#Informa√ß√µes necess√°rias
#√Årea da popula√ß√£o
const area = 1000000
#N√∫mero potencial de unidades secund√°rias por prim√°rias
const M = 40000
#N√∫mero potencial de unidades prim√°rias
const N = area/10000
#N√≠vel de signific√¢ncia (Œ±)
const alpha = 0.05
const EAR = 10 #Erro da amostragem requerido
#Unidade de medida da vari√°vel
Unidade = "m¬≥/0.25 ha" #Alterar em fun√ß√£o do invent√°rio
#Conversor para a unidade de √°rea por hectare
√Årea_da_parcela = 0.25
Conversor = 1/√Årea_da_parcela
#function Dois_estagios(Dados)
Dois_estagios(Dados) #Sa√≠da dos dados
